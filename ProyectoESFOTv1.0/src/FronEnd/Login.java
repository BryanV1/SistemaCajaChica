package FronEnd;

import Conexiones.Procedimientos;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Login extends javax.swing.JFrame {

    ArrayList<Object> usuarios = new ArrayList<>();
    Controlador controller = new Controlador();
    String nameUser;
    String idUser;   
    

    public Login() {
        initComponents();
        this.setLocationRelativeTo(null);
        /*try {
            Procedimientos.EntradaUsuario("12345", "Ivonne","1714130620", "1234");
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    public boolean Ingreso(String usuario, String pass, String seleccion) {
        boolean ingres = false;
        boolean ced;
        String cedula;
        String contrasena;
        //String rol = null;
        if (seleccion.equals("Administrador")) {
            //System.out.println("EntraAdmin");
            ResultSet res = Conexiones.Conexion.Consulta("select * from USUARIO");

            try {
                while (res.next()) {
                    String iduserSA = res.getString("ID_USUARIO");
                    if (ingres == false) {                        
                        cedula = res.getString("NICK_USUARIO");
                        contrasena = res.getString("PASS");                                               
                        ced = validarContrasenia(cedula);
                        if (cedula.equals(usuario) && contrasena.equals(pass)
                                /*&& seleccion.equals(rol)*/ && ced) {
                            ingres = true;
                        } else {
                            ingres = false;
                        }
                    } else {
                        ingres = true;
                    }
                }
            } catch (SQLException e) {
            }
        } else {            
            ResultSet res = Conexiones.Conexion.Consulta("select * from USUARIO");
            try {
                while (res.next()) {
                    if (ingres == false) {
                        cedula = res.getString("NICK_USUARIO");
                        contrasena = res.getString("PASS");
                        //Se pasa a las variables globales, el nombre y el id del
                        //usuario que se va a necesitar para pasar los datos de la factura 
                        nameUser= res.getString("NOMBRE_USUARIO");
                        idUser=res.getString("ID_USUARIO");                        
                        ced = validarContrasenia(cedula);
                        if (cedula.equals(usuario) && contrasena.equals(pass)
                                /*&& seleccion.equals(rol)*/ && ced) {
                            ingres = true;
                        } else {
                            ingres = false;
                        }
                    } else {
                        ingres = true;
                    }
                }
            } catch (SQLException e) {
            }

        }
        return ingres;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CampoUsuario = new javax.swing.JTextField();
        CampoContrasena = new javax.swing.JPasswordField();
        BotonAcceder = new javax.swing.JButton();
        BotonSalir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboboxtipo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Usuarios");
        setMinimumSize(new java.awt.Dimension(400, 195));
        setName("UserForm"); // NOI18N

        jLabel2.setText("Por favor ingrese sus credenciales:");

        jLabel3.setText("Usuario:");

        jLabel4.setText("Contrase√±a:");

        CampoContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoContrasenaActionPerformed(evt);
            }
        });

        BotonAcceder.setLabel("Acceder");
        BotonAcceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAccederActionPerformed(evt);
            }
        });

        BotonSalir.setText("Salir");
        BotonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSalirActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo Usuario:");

        comboboxtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Usuario" }));
        comboboxtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxtipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboboxtipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonAcceder, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(BotonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CampoUsuario)
                            .addComponent(CampoContrasena))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboboxtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CampoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CampoContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonAcceder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CampoContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoContrasenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoContrasenaActionPerformed

    private void BotonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_BotonSalirActionPerformed

    private void BotonAccederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAccederActionPerformed
        // TODO add your handling code here        
        boolean ingreso;
        String user, contrasena;
        user = CampoUsuario.getText();
        contrasena = CampoContrasena.getText();

        String modo = (String) comboboxtipo.getSelectedItem();

        ingreso = Ingreso(user, contrasena, modo);
        if (modo.equals("Administrador") && ingreso == true) {
            InterfazAdministrador m2 = new InterfazAdministrador();
            
            m2.setVisible(true);
            this.setVisible(false);
        } else if (modo.equals("Usuario") && ingreso == true) {
            InterfazUsuario m2 = new InterfazUsuario(nameUser,idUser);
            m2.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Verifique los datos ingresados", "Registro", JOptionPane.INFORMATION_MESSAGE);
            CampoUsuario.setText("");
            CampoContrasena.setText("");
        }
    }//GEN-LAST:event_BotonAccederActionPerformed

    private void comboboxtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxtipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxtipoActionPerformed

    private boolean validarContrasenia(String cedula) {
        boolean validar = false;
        int size = cedula.length();
        if (esNumerico(cedula) && size == 10) {
            int provincia = Integer.parseInt(cedula.substring(0, 2));
            int digito3 = Integer.parseInt(cedula.substring(2, 3));
            int diez = Integer.parseInt(cedula.substring(9, 10));
            int mul, arreglo, res, digver;
            String ced = "212121212";
            int sum = 0;
            for (int i = 0; i < 9; i++) {
                mul = Integer.parseInt(cedula.substring(i, i + 1));
                arreglo = Integer.parseInt(ced.substring(i, i + 1));
                res = mul * arreglo;
                if (res >= 10) {
                    res = res - 9;
                }
                sum = sum + res;
            }
            int suma = sum;
            while (suma % 10 != 0) {
                suma++;
            }
            digver = suma - sum;
            if (provincia >= 1 && provincia <= 24) {
                if (digito3 < 6) {
                    if (digver == diez) {
                        validar = true;
                    }
                }
            }
        }
        return validar;
    }

    private boolean esNumerico(String cedula) {
        try {
            Integer.parseInt(cedula);
            return true;
        } catch (NumberFormatException nfe) {
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAcceder;
    private javax.swing.JButton BotonSalir;
    private javax.swing.JPasswordField CampoContrasena;
    private javax.swing.JTextField CampoUsuario;
    private javax.swing.JComboBox<String> comboboxtipo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables

    private String paramString(int seleccion) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
